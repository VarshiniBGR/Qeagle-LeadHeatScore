openapi: 3.0.3
info:
  title: Lead HeatScore RAG API
  description: |
    AI-powered lead classification and personalized outreach platform using machine learning and RAG technology.
    
    ## Features
    - **Lead Classification**: ML-based lead scoring (Hot/Warm/Cold)
    - **RAG Email Generation**: Ultra-efficient personalized emails using GPT-4o-mini
    - **Hybrid Search**: BM25 + Vector similarity with cross-encoder reranking
    - **Real-time Processing**: Sub-3-second response times
    - **Enterprise Security**: Prompt injection detection and PII protection
    
    ## Token Efficiency
    - Ultra-compact prompts: 45-55 tokens (90% reduction)
    - Minimal context: 50 characters max (85% reduction)
    - Output limit: 150 tokens (81% reduction)
    - Cost per email: $0.0004 (91% savings vs traditional)
  version: 1.0.0
  contact:
    name: Lead HeatScore API Support
    url: http://localhost:8000/docs
  license:
    name: MIT

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.leadheatscore.com
    description: Production server

paths:
  /health:
    get:
      summary: Health Check
      description: Check API health and system status
      tags:
        - Health
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"
                  services:
                    type: object
                    properties:
                      database:
                        type: string
                        example: "connected"
                      ml_model:
                        type: string
                        example: "loaded"
                      rag_service:
                        type: string
                        example: "active"

  /api/v1/score-lead:
    post:
      summary: Score Lead
      description: Classify a lead as Hot/Warm/Cold based on engagement metrics
      tags:
        - Lead Scoring
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadInput'
            example:
              name: "John Doe"
              email: "john@company.com"
              role: "Developer"
              campaign: "AI Program"
              source: "website"
              region: "US"
              recency_days: 2
              page_views: 15
              time_spent: 360
              last_touch: "pricing_page"
              prior_course_interest: "high"
      responses:
        '200':
          description: Lead scored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadScore'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/recommendation:
    post:
      summary: Get Recommendation
      description: Generate AI-powered next action recommendation
      tags:
        - Recommendations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadInput'
      responses:
        '200':
          description: Recommendation generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'

  /api/v1/get-personalized-email:
    post:
      summary: Generate RAG Email
      description: Create ultra-efficient RAG-powered personalized email content
      tags:
        - RAG Email Generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadInput'
      responses:
        '200':
          description: RAG email generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RAGEmailResponse'
        '408':
          description: RAG generation timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: OpenAI API error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/send-test-email:
    post:
      summary: Send Email
      description: Send personalized email via SMTP
      tags:
        - Email Delivery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to_email:
                  type: string
                  format: email
                  example: "john@company.com"
                lead_data:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "John Doe"
                    role:
                      type: string
                      example: "Developer"
                    campaign:
                      type: string
                      example: "AI Program"
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email sent successfully"
                  message_id:
                    type: string
                    example: "msg_123456789"
                  timestamp:
                    type: string
                    format: date-time

  /api/v1/upload-leads:
    post:
      summary: Upload CSV Leads
      description: Bulk process leads from CSV file
      tags:
        - Batch Processing
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV file with lead data
      responses:
        '200':
          description: CSV processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /api/v1/leads:
    get:
      summary: Get All Leads
      description: Retrieve processed leads with pagination
      tags:
        - Lead Management
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            default: 20
            maximum: 100
        - name: heat_score
          in: query
          description: Filter by heat score
          schema:
            type: string
            enum: [hot, warm, cold]
      responses:
        '200':
          description: Leads retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  leads:
                    type: array
                    items:
                      $ref: '#/components/schemas/LeadResult'
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_leads:
                        type: integer
                      has_next:
                        type: boolean
                      has_prev:
                        type: boolean

  /api/v1/metrics:
    get:
      summary: Performance Metrics
      description: Get system performance analytics
      tags:
        - Analytics
      responses:
        '200':
          description: Metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'

  /api/v1/feature-importance:
    get:
      summary: Feature Importance
      description: Get insights on which features drive lead scoring
      tags:
        - Analytics
      responses:
        '200':
          description: Feature importance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  feature_importance:
                    type: array
                    items:
                      type: object
                      properties:
                        feature:
                          type: string
                        importance:
                          type: number
                          format: float
                  analysis:
                    type: string

components:
  schemas:
    LeadInput:
      type: object
      required:
        - name
        - email
        - role
        - campaign
      properties:
        name:
          type: string
          descriptionï¿½: Lead name
          example: "John Doe"
        email:
          type: string
          format: email
          description: Lead email address
          example: "john@company.com"
        role:
          type: string
          description: Job role/position
          example: "Developer"
        campaign:
          type: string
          description: Campaign or interest area
          example: "AI Program"
        source:
          type: string
          description: Lead source
          example: "website"
        region:
          type: string
          description: Geographic region
          example: "US"
        recency_days:
          type: integer
          description: Days since last activity
          minimum: 0
          example: 2
        page_views:
          type: integer
          description: Number of page views
          minimum: 0
          example: 15
        time_spent:
          type: integer
          description: Time spent in seconds
          minimum: 0
          example: 360
        last_touch:
          type: string
          description: Last interaction
          example: "pricing_page"
        prior_course_interest:
          type: string
          enum: [low, medium, high]
          description: Prior course interest level
          example: "high"

    LeadScore:
      type: object
      properties:
        lead_id:
          type: string
          format: uuid
          description: Unique lead identifier
        heat_score:
          type: string
          enum: [hot, warm, cold]
          description: Lead heat classification
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Classification confidence
        probabilities:
          type: object
          properties:
            cold:
              type: number
              format: float
            warm:
              type: number
              format: float
            hot:
              type: number
              format: float
        features_used:
          type: array
          items:
            type: string

    Recommendation:
      type: object
      properties:
        lead_id:
          type: string
          format: uuid
        recommended_channel:
          type: string
          enum: [email, newsletter]
        message_content:
          type: string
          description: Personalized message content
        rationale:
          type: string
          description: Reasoning for recommendation
        confidence:
          type: number
          format: float
        next_steps:
          type: array
          items:
            type: string

    RAGEmailResponse:
      type: object
      properties:
        subject:
          type: string
          description: Email subject line
          example: "ð¥ URGENT: Only 2 Spots Left - 48hrs"
        content:
          type: string
          description: Email content
        type:
          type: string
          enum: [rag, template]
          description: Generation method used
        personalization_data:
          type: object
          properties:
            name:
              type: string
            role:
              type: string
            page_views:
              type: integer
            campaign:
              type: string
        token_usage:
          type: object
          properties:
            input_tokens:
              type: integer
            output_tokens:
              type: integer
            total_cost:
              type: number
              format: float

    UploadResponse:
      type: object
      properties:
        upload_id:
          type: string
        total_leads:
          type: integer
        processed:
          type: integer
        failed:
          type: integer
        results:
          type: array
          items:
            type: object
            properties:
              lead_id:
                type: type: string
              heat_score:
                type: string
              confidence:
                type: number
              status:
                type: string

    LeadResult:
      type: object
      properties:
        lead_id:
          type: string
        lead_data:
          $ref: '#/components/schemas/LeadInput'
        score:
          $ref: '#/components/schemas/LeadScore'
        recommendation:
          $ref: '#/components/schemas/Recommendation'

    MetricsResponse:
      type: object
      properties:
        system_metrics:
          type: object
          properties:
            total_requests:
              type: integer
            avg_latency_ms:
              type: number
            error_rate:
              type: number
            success_rate:
              type: number
        rag_metrics:
          type: object
          properties:
            total_emails_generated:
              type: integer
            avg_tokens_per_request:
              type: number
            cache_hit_rate:
              type: number
            cost_per_email:
              type: number
        model_metrics:
          type: object
          properties:
            total_predictions:
              type: integer
            accuracy:
              type: number
            avg_confidence:
              type: number
            heat_score_distribution:
              type: object
              properties:
                hot:
                  type: number
                warm:
                  type: number
                cold:
                  type: number

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Invalid lead data provided"
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
                  value:
                    type: string
            timestamp:
              type: string
              format: date-time
            trace_id:
              type: string

  responses:
    RateLimitResponse:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per window
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests in current window
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Time when rate limit resets

tags:
  - name: Health
    description: Health check and system status
  - name: Lead Scoring
    description: ML-based lead classification
  - name: Recommendations
    description: AI-powered next action suggestions
  - name: RAG Email Generation
    description: Ultra-efficient personalized email generation
  - name: Email Delivery
    description: SMTP email sending
  - name: Batch Processing
    description: CSV upload and bulk processing
  - name: Lead Management
    description: Lead retrieval and management
  - name: Analytics
    description: Performance metrics and insights

security:
  - ApiKeyAuth: []

securitySchemes:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
    description: API key for authentication
